name: Documentation to GitHub Pages

on:
  push:
    branches: [ main, master ]
    paths:
      - 'Packages/Verve.Core/**'
      - 'Packages/Verve.UniEx/**'
      - 'Documentation/**'
      - '.github/workflows/documentation.yml'
  workflow_dispatch:

env:
  DOTNET_VERSION: '6.0.x'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true
          
      - uses: actions/cache@v3
        with:
           path: Library
           key: Library-${{ hashFiles('Packages/Verve.Core/**', 'Packages/Verve.UniEx/**') }}
           restore-keys: |
             Library-

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Install DocFX
        run: |
          dotnet tool update -g docfx

      - name: Validate DocFX configuration
        run: |
          if [ ! -f "Documentation/docfx.json" ]; then
            echo "docfx.json not found in Documentation folder"
            exit 1
          fi
          echo "DocFX configuration found"

      - name: Generate API documentation
        run: |
          cd Documentation
          docfx docfx.json --logLevel Warning
          if [ -d "_site" ]; then
            echo "Documentation directory created, checking contents..."
            find _site -name "*.html" | head -10
          else
            echo "No _site directory created, attempting fallback generation..."
            docfx metadata docfx.json --logLevel Warning
            docfx build docfx.json --logLevel Warning
          fi

      - name: Verify generated documentation
        run: |
          cd Documentation
          if [ -d "_site" ] && [ -f "_site/index.html" ]; then
            echo "Documentation generated successfully"
            echo "Generated files:"
            find _site -name "*.html" | head -10
          else
            echo "Documentation generation failed - _site folder not found"
            ls -la
            exit 1
          fi

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./Documentation/_site/

  deploy:
    needs: build
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4